<h1 class="invisible">Events</h1>
<div class="container spaced">
	<div class="row">
		<div class="w12 wysiwyg">
			<ul class="nav-secondary">
				<li><a href="/create/event">Create Event</a></li>
			</ul>
		</div>
	</div>
	<div class="row">
		<div class="w12 wysiwyg centred">
			<h2>Events nearby</h2>
			<p>Find an event nearby. You may need to allow permission to use your location.</p>

			<form onsubmit="return false" oninput="output.value = distance.value">
				<label for="distance">Distance (in kilometres)</label>
				<input type="range" name="distance" id="distance" min="5" value="10" max="250" step="5" ondrag="updateDistance(value)">
				<output for="distance" id="distance-output" name="output">10</output>
			</form>

			<button id="locator" class="cta-submit locate">Find events</button>
		</div>
	</div>
</div>
<div id="preloader" class="hidden">
	<img src="/images/loading-spin.svg" width="64" height="64">
</div>
<div id="map-canvas" class="hidden"></div>
<script src="http://maps.google.com/maps/api/js?sensor=false" type="text/javascript"></script>
<script>

var updateDistance = function(vol) {
	document.getElementById('distance-output').value = vol;
}

$l.ready(function() {

	var dumpBox = $l.id('dump');
	var button = $l.id('locator');
	var map_l = $l('#map-canvas');
	var preloader = $l('#preloader');

	var plotMapPoints = function(locations, lat, lng){

		var map = new google.maps.Map(document.getElementById('map-canvas'), {
			zoom: 10,
			center: new google.maps.LatLng(lat, lng),
			mapTypeId: google.maps.MapTypeId.ROADMAP,
			scrollwheel: false,
		});

		$l.css.addClass(preloader, 'hidden');
		$l.css.addClass(map_l, 'active');

		for (var i = 0; i < locations.length; i++) {

			var toolTipContent = "<a href=/events/" + locations[i].obj._id + ">" + locations[i].obj.eventTitle + "</a>"

			var thisLat = locations[i].obj.location.coordinates[1];
			var thisLng = locations[i].obj.location.coordinates[0];

			var infowindow = new google.maps.InfoWindow();
			var marker = new google.maps.Marker({
				position: new google.maps.LatLng(thisLat, thisLng),
				map: map,
				animation: google.maps.Animation.DROP
			});

			google.maps.event.addListener(marker, 'click', (function(marker, i) {
				return function() {
					infowindow.setContent(toolTipContent);
					infowindow.open(map, marker);
				}
			})(marker, i));
		}
	}

	var showPosition = function(position) {

		var lat = position.coords.latitude; // store the latitude
		var lng = position.coords.longitude; // store the longitude
		var distance = document.getElementById('distance').value;

		$l.ajax.post(
			'/search/events/nearby', // the API URL that the POST request is made to
			{ lat: lat, lng: lng, distance: distance }, // pass the latitude and longitude to the server as POST request parameters
			function(response) { // parse the server response
				var locations = response.results;
				console.log(locations);

				plotMapPoints(locations, lat, lng);				
			}
		);
	}

	$l.dom.setEvent(
		button,
		'click',
		function() {
			if (navigator.geolocation) {
				
				$l.css.removeClass(preloader, 'hidden');
				var position = navigator.geolocation.getCurrentPosition(showPosition);

			 } else {
				// need to have a no-geolocation error here
			}
		}
	);

	//var googleMap = $l.id('map_canvas');
	//var thisTeam = $l.dom.data(button, 'teamID');

});
</script>
