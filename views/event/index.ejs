<h1 class="invisible">Events</h1>
<div class="container spaced">
	<div class="row">
		<div class="w12 wysiwyg">
			<ul class="nav-secondary">
				<li><a href="/create/event">Create Event</a></li>
			</ul>
		</div>
	</div>
	<div class="row">
		<div class="w12 wysiwyg centred">
			<h2>Find an event</h2>
			<p>If you know the title of the event, search for it below. Otherwise, use the location search to find local events.</p>
			<form action="/search/events" method="POST">
				<input class="input med breaker" type="text" id="findEvent" name="query" placeholder="Enter an event title">
			</form>
		</div>
	</div>	
	<div class="row">
		<div class="w12 wysiwyg centred">
			<h2>Events nearby</h2>
			<p>Find an event nearby. You may need to allow permission to use your location.</p>

			<form onsubmit="return false" oninput="output.value = distance.value">
				<label for="distance">Distance:</label>
				<output for="distance" id="distance-output" name="output">10</output><span> kilometres</span>
				<input class="input med" type="range" name="distance" id="distance" min="5" value="10" max="250" step="5" ondrag="updateDistance(value)">
			</form>

			<button id="locator" class="cta-submit locate">Find events</button>
		</div>
	</div>
</div>
<div id="preloader" class="hidden">
	<img src="/images/loading-spin.svg" width="64" height="64">
</div>
<div id="map-canvas" class="hidden"></div>
<script src="http://maps.google.com/maps/api/js?sensor=false" type="text/javascript"></script>
<script>

var updateDistance = function(vol) {
	document.getElementById('distance-output').value = vol; // function for updating the feedback for the range slider
}

function setUpMarkerInfo(marker, map, infowindow, toolTipContent) { // function for adding the data windows to each map marker when plotted
    google.maps.event.addListener(marker, 'click', function() {
    	if (infowindow){
    		infowindow.close();
    	}
        infowindow.setContent(toolTipContent);
        infowindow.open(map, marker);
    });
}

$l.ready(function() {

	var button = $l.id('locator'); // select the button from the DOM
	var map_l = $l('#map-canvas'); // select the div that will contain the map
	var preloader = $l('#preloader'); // select the div containing the loading spinner

	var infowindow = new google.maps.InfoWindow(); // declared globally so there can only be one open at a time

	var plotMapPoints = function(locations, lat, lng){

		// create a new Google Map
		var map = new google.maps.Map(document.getElementById('map-canvas'), {
			zoom: 10,
			center: new google.maps.LatLng(lat, lng),
			mapTypeId: google.maps.MapTypeId.ROADMAP,
			scrollwheel: false,
		});

		$l.css.addClass(preloader, 'hidden'); // hide the loading spinner
		$l.css.addClass(map_l, 'active'); // show the map

		// loop through each map marker
		for (var i = 0; i < locations.length; i++) {

			// content to go into infowindow
			var toolTipContent = "<a href=/events/" + locations[i].obj._id + ">" + locations[i].obj.eventTitle + "</a>" 

			// get lat/lng for the marker
			var thisLat = locations[i].obj.location.coordinates[1];
			var thisLng = locations[i].obj.location.coordinates[0];

 			// drop a marker on the map
			var marker = new google.maps.Marker({
				position: new google.maps.LatLng(thisLat, thisLng),
				map: map,
				animation: google.maps.Animation.DROP
			});

			// add an event listener to open the infowindow if the marker is clicked
			setUpMarkerInfo(marker, map, infowindow, toolTipContent); 

		}
	
	}

	var showPosition = function(position) {
		
		var lat = position.coords.latitude; // store the latitude
		var lng = position.coords.longitude; // store the longitude
		var distance = document.getElementById('distance').value; // get the radius distance from the range input

		$l.ajax.post(
			'/search/events/nearby', // the API URL that the POST request is made to
			{ lat: lat, lng: lng, distance: distance }, // pass the latitude and longitude to the server as POST request parameters
			function(response) { // parse the server response

				if (response.results.length > 0){
					var locations = response.results;
					plotMapPoints(locations, lat, lng);
				} else {
					console.log("No events found");
					$l.css.addClass(preloader, 'hidden');
				}			
			}
		);
	}

	$l.dom.setEvent(
		button,
		'click',
		function() {

			if (navigator.geolocation) {
				
				$l.css.removeClass(preloader, 'hidden');
				var position = navigator.geolocation.getCurrentPosition(showPosition);

			 } else {

		 		$l.dom.insert(map_l,'afterBegin',"<p>Sorry, you don't have geolocation enabled</p>");

			}
		}
	);
});
</script>
